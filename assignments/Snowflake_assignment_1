USE DATABASE AG_SALES_DATA_FINAL;

/*-------- 1. loading the data--------------*/

create or replace table AG_sales_data_final
(
    Order_id VARCHAR(50),
    order_date string,
    ship_date string,
    ship_mode VARCHAR(50),
    customer_name VARCHAR(50),
    segment VARCHAR(50),
    state VARCHAR(40),
    country VARCHAR(40),
    market VARCHAR(20),
    Region VARCHAR(20),
    Product_id VARCHAR(40),
    category VARCHAR(40), 
    sub_category VARCHAR(40),
    product_name VARCHAR2(200),
    sales string,
    quality string,
    discount DECIMAL(10, 2),
    profit DECIMAL(10, 2),
    shipping_cost DECIMAL(10, 2),
    order_price string,
    year VARCHAR(4) 
);

describe table AG_Sales_data_final;

select * from AG_sales_data_final;


/*----------1. changing the primary key to order_id column------------*/


create or replace table AG_sales_data_final
(
    Order_id VARCHAR(50) not null primary key,
    order_date string,
    ship_date string,
    ship_mode VARCHAR(50),
    customer_name VARCHAR(50),
    segment VARCHAR(50),
    state VARCHAR(40),
    country VARCHAR(40),
    market VARCHAR(20),
    Region VARCHAR(20),
    Product_id VARCHAR(40),
    category VARCHAR(40), 
    sub_category VARCHAR(40),
    product_name VARCHAR2(200),
    sales string,
    quality string,
    discount DECIMAL(10, 2),
    profit DECIMAL(10, 2),
    shipping_cost DECIMAL(10, 2),
    order_price string,
    year VARCHAR(4) 
);

describe table AG_SALES_DATA_FINAL;
select * from AG_SALES_DATA_FINAL;



/*-----------3.check the data type for order date and ship date and mention in what data type it should be--------------*/

ALTER TABLE AG_sales_data_final
ADD COLUMN new_order_date DATE;

UPDATE AG_sales_data_final
SET new_order_date = TO_DATE(order_date, 'YYYY/MM/DD');


ALTER TABLE AG_sales_data_final
ADD COLUMN new_ship_date DATE;

UPDATE AG_sales_data_final
SET new_ship_date = TO_DATE(ship_date, 'YYYY/MM/DD');

----------------------------4.create column called order_extract and extract the number after the last'-'' from order ID column--------------
ALTER TABLE AG_sales_data_final
ADD COLUMN order_extract VARCHAR(50);

UPDATE AG_sales_data_final
SET order_extract = SPLIT_PART(order_id, '-', -1);

-----------------------------5. create new column called process days and calculate how many days it takes for each orderid to process from the order to its shipment.-----------------------------------------------------


ALTER TABLE AG_sales_data_final
ADD COLUMN process_days INTEGER;

UPDATE AG_sales_data_final
SET process_days = DATEDIFF(day, TO_DATE(ship_date, 'YYYY/MM/DD'), TO_DATE(order_date, 'YYYY/MM/DD'));

--------------------6. Create a new column called Discount Flag and categorize it based on discount. Use ‘Yes’ if the discount is greater than zero else ‘No’.--------------------------

ALTER TABLE AG_sales_data_final
ADD COLUMN Discount_Flag VARCHAR(3);

UPDATE AG_sales_data_final
SET Discount_Flag = CASE 
 WHEN discount > 0 THEN 'Yes'
 ELSE 'No'
 END;

------------7.Create a new column called Rating--------------------

ALTER TABLE AG_sales_data_final
ADD COLUMN Rating VARCHAR(10);

/*a. If process days less than or equal to 3days then rating should be 5
b. If process days are greater than 3 and less than or equal to 6 then rating
should be 4
c. If process days are greater than 6 and less than or equal to 10 then rating
should be 3
d. If process days are greater than 10 then the rating should be 2.*/

update AG_sales_data_final
set Rating =case
when process_days<=3 then '5'
when process_days>3<=6 then '4'
when process_days>6<=10 then '3'
else '2'
end;


